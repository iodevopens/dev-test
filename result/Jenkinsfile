pipeline {
    agent none
    stages {
        stage('Build') {
            agent {
                docker {
                    image 'node:8.16.0-alpine'
                }
            }
            when {
                changeset '**/result/**'
            }
            steps {
                echo 'Compiling result app'
                dir ('result') {
                    sh 'npm install'
                }
            }
        }
        stage('Test') {
            agent {
                docker {
                    image 'node:8.16.0-alpine'
                }
            }
            when {
                changeset '**/result/**'
            }
            steps {
                echo 'Running unit tester on result app'
                dir ('result') {
                    sh 'npm test'
                }
            }
        }
        stage('docker-package') {
            agent any
            when {
                branch 'master'
                changeset '**/result/**'
            }
            steps {
                echo 'Packaging the result app'
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'fackohub') {
                        def resultImage = docker.build("airseneo/result:v${env.BUILD_ID}", "./result")
                        resultImage.push()
                        resultImage.push("${env.BRANCH_NAME}")
                    }
                }
            }
        }
    }
    post {
        always {
            echo 'Pipeline for result app is complete...'
        }
        success {
            slackSend (channel: "devops-tools", message: "Result Build and Test succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
        failure {
            slackSend (channel: "devops-tools", message: "Result Build &/or Test failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
    }
}
